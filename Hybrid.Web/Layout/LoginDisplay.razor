@using System.Net
@inject NavigationManager Navigation
@layout EmptyLayout

<AuthorizeView>
    <Authorized>
        Hello, @context.User.Identity?.Name!
        <button class="nav-link btn btn-link" @onclick="BeginLogOut">Log out</button>
    </Authorized>
    <NotAuthorized>
        <a href="authentication/login">Log in</a>
    </NotAuthorized>
</AuthorizeView>

@code {

    [CascadingParameter]
    private Task<AuthenticationState>? authState { get; set; }


    public async void BeginLogOut()
    {
        var authenticationState = await authState!;
        var user = authenticationState.User;

        if (user.Identity!.IsAuthenticated)
        {
            string url = "http://localhost:5242";
            string encodedUrl = WebUtility.UrlEncode(url);
            var logoutUrl = $"http://192.168.43.106:8080/realms/Test/protocol/openid-connect/logout?post_logout_redirect_uri={encodedUrl}/home&client_id=tripex";
            Navigation.NavigateToLogout(logoutUrl);
        }
    }
}
